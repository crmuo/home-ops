---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.4.0@sha256:a9f405688344a8a6f718e2c344438342ad21540986aeb5ab5fa781831eb2c597
            env:
              INIT_POSTGRES_DBNAME: &dbName sonarr_main
              INIT_POSTGRES_HOST: &dbHost
                valueFrom:
                  secretKeyRef:
                    name: postgres-app
                    key: host
              INIT_POSTGRES_USER: &dbUser
                valueFrom:
                  secretKeyRef:
                    name: postgres-app
                    key: user
              INIT_POSTGRES_PASS: &dbPass
                valueFrom:
                  secretKeyRef:
                    name: postgres-app
                    key: password
              INIT_POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: postgres-superuser-secret
                    key: password
        containers:
          *app :
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.14@sha256:5126f7ae94745a8e58e6963e1f67e905766c096832eff08b0678355ad0cdecee
            env:
              TZ: ${TIMEZONE}
              SONARR__APP__INSTANCENAME: *app
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
              SONARR__POSTGRES__HOST: *dbHost
              SONARR__POSTGRES__PORT: 5432
              SONARR__POSTGRES__USER: *dbUser
              SONARR__POSTGRES__PASSWORD: *dbPass
              SONARR__POSTGRES__MAINDB: *dbName
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      *app :
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http
    persistence:
      config:
        existingClaim: *app
      tmp:
        type: emptyDir
      data:
        type: nfs
        server: ${IP_NAS}
        path: /data
        globalMounts:
          - path: /data
